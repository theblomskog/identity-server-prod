# Replace the GetData method with the one below:
#################################################

        //With refresh token
        public async Task<IActionResult> GetData()
        {
            try
            {
                var accessToken = await HttpContext.GetTokenAsync("access_token");
                var refreshToken = await HttpContext.GetTokenAsync("refresh_token");

                if(string.IsNullOrEmpty(refreshToken))
                {
                    return Content("{ \"name\":" + "\"Refresh token missing, please login again\" }");
                }


                var tokenHandler = new JwtSecurityTokenHandler();
                var token = tokenHandler.ReadJwtToken(accessToken);
                var ValidFrom = token.ValidFrom;
                var ValidTo = token.ValidTo;

                //var expiresAt = DateTimeOffset.Parse(await HttpContext.GetTokenAsync("expires_at"));

                int tokenExpiresInSec = CalculateWhenTokenExpires(accessToken ?? "");

                if (tokenExpiresInSec < 5)
                {
                    accessToken = GetNewAccessToken(refreshToken).Result;
                }

                HttpClient? client = _httpClientFactory.CreateClient("paymentapi");
                client.SetBearerToken(accessToken);

                var content = await client.GetStringAsync("/payments/get");

                var json = JObject.Parse(content);
                json.TryGetValue("name", out var value);
                string name = value.ToString();

                string str = "Got Data " + name + " (Access token exires in " + ((int)tokenExpiresInSec).ToString() + " sec)";

                return Content("{ \"name\":" + "\"" + str + "\" }");

            }
            catch (Exception exc)
            {
                return Content("{ \"name\":" + "\"" + exc.Message + "\" }");
            }
        }
